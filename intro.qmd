# Introduction

This book started as a collection of notes from several classes I gave in the Department of Biological Sciences at the Université de Montréal, as well as a few workshops I ran with the Québec Centre for Biodiversity Sciences. In teaching data synthesis, data science, and machine learning to biology students, I realized that the field was missing a stepping stone to proficiency. There are excellent manuals covering the mathematics of data science and machine learning **REFS**; there are many good papers giving overviews of some applications of data science to biological problems **REFS**; and there are, of course, thousands of tutorials about how to write code. But one thing that students commonly called for was an attempt to tie concepts together. This is this attempt.

## Core concepts in data science

### EDA

### Clustering and regression

### Supervised and unsupervised

### Training, testing, and validation

### Transformations and feature engineering

## An overview of the content

## How to read this book

## Some rules about this book

When I started aggregating these notes, I decided on a series of three rules. No code, no simulated data, and no `iris`. In this section, I will go through *why* I decided to adopt these rules, and how it can change the way you interact with the book.

### No code

This is, maybe, the most surprising rule, because data science *is* programming (in a sense). But sometimes there is so much focus on programming that we lose track of the other, important aspects of the practice of data science: abstractions, relationship with data, and domain knowledge.

This book *did* involve a lot of code. Specifically, this book was written using *Julia* [@bezanson2017], and every figure is generated by a notebook, and they are available online, and used in the classroom. But code is *not* a universal language, and unless you are familiar with the language, code can obfuscate. I had no intention to write a *Julia* book (or an *R* book, or a *Python* book). The point is to think about data science applied to ecological research, and I felt like it would be more inclusive to do this in a language agnostic way.

And finally, code rots. Code with more dependencies rots faster. It take a single change in the API of a package to break the examples, and then you are left with a very expensive doorstop[^intro-1].

[^intro-1]: Which will not happen with this book! Ever! Not because it will not become obsolete, but because it's online, and free, two sever impediments to being an expensive doorstop.

### No simulated data

### No `iris`